{"version":3,"sources":["index.js"],"names":["daysEl","document","querySelector","hoursEl","minsEl","secsEl","CountdownTimer","targetDate","init","getDeltaTime","setInterval","currentTime","Date","now","deltaTime","getTimeComponents","time","days","pad","Math","floor","hours","mins","secs","timerFace","value","String","padStart","textContent","selector"],"mappings":";AAsDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtDA,IAAMA,EAASC,SAASC,cAAc,2BAChCC,EAAUF,SAASC,cAAc,4BACjCE,EAASH,SAASC,cAAc,2BAChCG,EAASJ,SAASC,cAAc,2BAEhCI,EAAAA,WAC6B,SAAA,IAAJ,IAAfC,GAAe,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAAfA,WAAmB,EAAA,KAAA,GAC1BA,KAAAA,WAAaA,EACbC,KAAAA,OA8CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA3CS,MAAA,WAAA,IAAA,EAAA,KACAC,KAAAA,eACLC,YAAY,WACV,EAAKD,gBACJ,OAuCP,CAAA,IAAA,eApCiB,MAAA,WACPE,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKP,WAAaI,EAC/BI,KAAAA,kBAAkBD,KAiC3B,CAAA,IAAA,oBAzBoBE,MAAAA,SAAAA,GACVC,IAAAA,EAAO,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QACnCK,EAAQ,KAAKH,IACjBC,KAAKC,MAAOJ,EAAQ,MAAyB,OAEzCM,EAAO,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MACxDO,EAAO,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,MAEnDQ,KAAAA,UAAUP,EAAMI,EAAOC,EAAMC,KAiBtC,CAAA,IAAA,MAZME,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAWrC,CAAA,IAAA,YARYV,MAAAA,SAAAA,EAAMI,EAAOC,EAAMC,GAC3BvB,EAAO4B,YAAiBX,GAAAA,OAAAA,GACxBd,EAAQyB,YAAiBP,GAAAA,OAAAA,GACzBjB,EAAOwB,YAAiBN,GAAAA,OAAAA,GACxBjB,EAAOuB,YAAiBL,GAAAA,OAAAA,OAI5B,EAjDMjB,GAiDN,IAAIA,EAAe,CACjBuB,SAAU,WACVtB,WAAY,IAAIK,KAAK","file":"src.1ae90bd2.js","sourceRoot":"..\\src","sourcesContent":["const daysEl = document.querySelector('span[data-value=\"days\"]');\r\nconst hoursEl = document.querySelector('span[data-value=\"hours\"]');\r\nconst minsEl = document.querySelector('span[data-value=\"mins\"]');\r\nconst secsEl = document.querySelector('span[data-value=\"secs\"]');\r\n\r\nclass CountdownTimer {\r\n  constructor({ targetDate } = {}) {\r\n    this.targetDate = targetDate;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.getDeltaTime();\r\n    setInterval(() => {\r\n      this.getDeltaTime();\r\n    }, 1000);\r\n  }\r\n\r\n  getDeltaTime() {\r\n    const currentTime = Date.now();\r\n    const deltaTime = this.targetDate - currentTime;\r\n    this.getTimeComponents(deltaTime);\r\n  }\r\n \r\n  /*\r\n   * - Принимает время в миллисекундах\r\n   * - Высчитывает сколько в них вмещается часов/минут/секунд\r\n   * - Возвращает обьект со свойствами days, hours, mins, secs\r\n   */\r\n  getTimeComponents(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    this.timerFace(days, hours, mins, secs)\r\n  }\r\n\r\n  \r\n  // Принимает число, приводит к строке и добавляет в начало 0 если число меньше 2-х знаков\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n\r\n  timerFace(days, hours, mins, secs) {\r\n    daysEl.textContent = `${days}`;\r\n    hoursEl.textContent = `${hours}`;\r\n    minsEl.textContent = `${mins}`;\r\n    secsEl.textContent = `${secs}`;\r\n  }\r\n}\r\n\r\nnew CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Dec 10, 2020'),\r\n});"]}